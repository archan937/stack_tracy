<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8"/>
    <title>
      stack_tracy@localhost: /<%= File.basename(file) if file %>
    </title>
    <script src="assets/jquery.js" type="text/javascript"></script>
    <script src="assets/bootstrap-tab.js" type="text/javascript"></script>
    <script src="assets/tiny_sort.js" type="text/javascript"></script>
    <script src="assets/comments.js" type="text/javascript"></script>
    <script src="assets/stack_tracy.js" type="text/javascript"></script>
    <link href="assets/bootstrap-tab.css" type="text/css" rel="stylesheet" media="screen"/>
    <link href="assets/stack_tracy.css" type="text/css" rel="stylesheet" media="screen"/>
  </head>
  <body>
    <div id="page">
      <h1>
        StackTracy&nbsp; <small><a href="file://<%= file %>"><%= file %></a></small>
      </h1>
      <div class="tabbable">
        <ul class="nav nav-tabs">
          <li class="active">
            <a href="#stack_trace" data-toggle="tab">Stack trace</a>
          </li>
          <li>
            <a href="#cumulatives" data-toggle="tab">Cumulatives</a>
          </li>
          <li>
            <a href="#realtime_cumulatives" data-toggle="tab">Realtime cumulatives</a>
          </li>
        </ul>
        <div class="tab-content"><%
          limited = events.size > limit
          threshold = nil unless limited || slows_only
          excluded_objects = if limited
            %w(Array BasicObject Enumerable Fixnum Float Hash IO Integer Kernel Module Mutex Numeric Object Rational String Symbol Thread Time)
          else
            []
          end
          comment_depth = nil
          last_depth = nil
          last_duration = nil
          corrections = []
          stack = []
          cumulatives = {} %>
          <div class="tab-pane active" id="stack_trace">
            <div class="head">
              <span class="time">Time</span>
              <span class="duration">Duration</span>
              <span class="call">Call</span>
            </div>
            <div class="body"><%
             events.each_with_index do |event, index|
               skip = begin
                 ((event[:call][0] != "\"") && (messages_only || (slows_only && threshold && event[:duration] < threshold))) ||
                 (excluded_objects.include?(event[:object]) || "#{event[:object]}".match(/^#/))
               end
               if skip
                 corrections.unshift event[:depth] if corrections.empty? || corrections.first != event[:depth]
               else
                 cumulative = (cumulatives[event[:call]] ||= {:duration => 0.0, :count => 0, :real_duration => 0.0, :real_count => 0})
                 cumulative[:duration] += event[:duration].to_f
                 cumulative[:count] += 1
                 cumulative[:average] = cumulative[:duration].to_f / cumulative[:count].to_f

                 corrections.size.times do |i|
                   event[:depth] <= corrections[0] ? corrections.shift : break
                 end

                 stack = stack[0, event[:depth] - corrections.size] || []
                 unless stack.include? event[:call]
                   cumulative[:real_duration] += event[:duration].to_f
                   cumulative[:real_count] += 1
                   cumulative[:real_average] = cumulative[:real_duration].to_f / cumulative[:real_count].to_f
                 end
                 stack << event[:call]

if last_depth.to_i < event[:depth] - corrections.size %>
<div class="group"><% if threshold && comment_depth.nil? && last_duration && last_duration < threshold %><% comment_depth = event[:depth] - corrections.size %><%= "\n<!--" %><% end %><% else
close_tags = ((event[:depth] - corrections.size + 1)..last_depth.to_i).collect do |depth|
  if comment_depth && depth == comment_depth
    comment_depth = nil
    "\n-->\n</div>"
  else
    "\n</div>"
  end
end.reverse.join("")
%><%= close_tags %><% end %>
<div>
<span class="time"><%= "%.6f" % event[:time] %></span>
<span class="duration"><%= event[:duration] ? ("%.6f" % event[:duration]) : "?" %></span>
<span style="padding-left: <%= 10 * (event[:depth] - corrections.size) %>px"><% if (next_event = events[index + 1]) && next_event[:depth] > event[:depth] %><a class="toggler" href="#" onclick="return false"><%= event[:call].gsub(/^"(.*)"$/){ "<strong>#{$1}</strong>" } %></a><% else %><%= event[:call].gsub(/^"(.*)"$/){ "<strong>#{$1}</strong>" } %><% end %></span>
</div><%
last_depth = event[:depth] - corrections.size
last_duration = event[:duration]
end
end
close_tags = (1..last_depth.to_i).collect do |depth|
  if comment_depth && depth == comment_depth
    comment_depth = nil
    "\n-->\n</div>"
  else
    "\n</div>"
  end
end.reverse.join("")
%><%= close_tags %>
            </div>
          </div>
          <div class="tab-pane" id="cumulatives">
            <div class="head">
              <span class="average"><a href="javascript:StackTracy.sort('cumulatives', 0)">Average</a></span>
              <span class="duration"><a href="javascript:StackTracy.sort('cumulatives', 1)">Duration</a></span>
              <span class="count"><a href="javascript:StackTracy.sort('cumulatives', 2)">Count</a></span>
              <span class="call"><a href="javascript:StackTracy.sort('cumulatives', 3)">Call</a></span>
            </div>
            <div class="body"><% cumulatives.sort{|(ak, av), (bk, bv)| bv[:average] <=> av[:average]}.each do |call, stats| %>
<div>
<span class="average" abbr="<%= "%.6f" % stats[:average] %>"><%= "%.6f" % stats[:average] %></span>
<span class="duration" abbr="<%= "%.6f" % stats[:duration] %>"><%= "%.6f" % stats[:duration] %></span>
<span class="count" abbr="<%= stats[:count] %>"><%= stats[:count] %></span>
<span class="call" abbr="<%= call.gsub("<", "&lt;").gsub(">", "&gt;") %>"><%= call.gsub("<", "&lt;").gsub(">", "&gt;").gsub(/^"(.*)"$/){ "<strong>#{$1}</strong>" } %></span>
</div><% end %>
            </div>
          </div>
          <div class="tab-pane" id="realtime_cumulatives">
            <div class="head">
              <span class="average"><a href="javascript:StackTracy.sort('realtime_cumulatives', 0)">Average</a></span>
              <span class="duration"><a href="javascript:StackTracy.sort('realtime_cumulatives', 1)">Duration</a></span>
              <span class="count"><a href="javascript:StackTracy.sort('realtime_cumulatives', 2)">Count</a></span>
              <span class="call"><a href="javascript:StackTracy.sort('realtime_cumulatives', 3)">Call</a></span>
            </div>
            <div class="body"><% cumulatives.sort{|(ak, av), (bk, bv)| bv[:real_average] <=> av[:real_average]}.each do |call, stats| %>
<div>
<span class="average" abbr="<%= "%.6f" % stats[:real_average] %>"><%= "%.6f" % stats[:real_average] %></span>
<span class="duration" abbr="<%= "%.6f" % stats[:real_duration] %>"><%= "%.6f" % stats[:real_duration] %></span>
<span class="count" abbr="<%= stats[:real_count] %>"><%= stats[:real_count] %></span>
<span class="call" abbr="<%= call.gsub("<", "&lt;").gsub(">", "&gt;") %>"><%= call.gsub("<", "&lt;").gsub(">", "&gt;").gsub(/^"(.*)"$/){ "<strong>#{$1}</strong>" } %></span>
</div><% end %>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div id="footer">
      made by <a href="https://twitter.com/archan937">Paul Engel (@archan937)</a> - <a href="https://github.com/archan937/stack_tracy">@github</a> - <a href="http://holder.nl">Internetbureau Holder B.V.</a>
    </div>
  </body>
</html>